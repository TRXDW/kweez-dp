{"version":3,"sources":["components/Quizzes.js","components/Quiz.js","components/Summary.js","components/Main.js","components/StartScreen.js","components/LoginForm.js","components/RegisterForm.js","components/Login.js","components/App.js","serviceWorker.js","index.js"],"names":["Quizzes","props","quizzes","loggedUser","qMap","map","quiz","react_default","a","createElement","key","id","className","concat","quizzesProgress","rarity","onClick","quizName","Quiz","choosenQuiz","questionNum","didAnswer","sQuestion","selectedAnswer","userQuizData","quizQuestionsLength","questions","length","answers","answer","answerId","correctAnswerIndex","e","onClickAnswer","letter","text","question","onClickNext","Summary","promExist","promotionExist","Fragment","numOfGoodAnswer","avarageGoodAnswer","Main","state","sQuestions","numOfGoodAnswers","summaryExist","shuffle","array","temp","i","j","Math","floor","random","handleChooseQuiz","quizId","_this","quizSelected","filter","find","quizProgress","setState","prevState","handleShuffleQuestion","shuffledQuestions","Object","toConsumableArray","handleChooseQuestion","handleNextQuestion","cAns","handleCountAvarageGoodAnswer","lastSolvesGoodAns","lastSolves","reduce","x","y","handleChooseAnswer","rarityPromotion","_this2","this","fetch","then","response","json","result","_this$state","components_Summary","components_Quiz","components_Quizzes","Component","StartScreen","lTriangle","circle","onAnimationEnd","rTriangle","LoginForm","inputLogin","inputPass","onSubmit","type","value","placeholder","onChange","name","onRegisterClick","loginError","RegisterForm","inputEmail","onBackClick","Login","register","rightTestLogin","rightTestPass","handleChange","target","handleRegisterFormShow","handleLoginError","components_RegisterForm","onRegisterSubmit","components_LoginForm","onLoginSubmit","App","menuAnim","leftTriangleAnim","rightTriangleAnim","circleAnim","animEnd","isLogged","users","handleShowNavigation","handleStart","handleChangeOnAnim","handleLoginSubmit","toLowerCase","preventDefault","user","username","password","handleRegisterSubmit","components_StartScreen","components_Main","components_Login","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a4661e68.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Quizzes = props => {\r\n    const { quizzes, loggedUser } = props;\r\n\r\n    const qMap = quizzes.map(quiz => <button key={quiz.id}\r\n        className={`quizzes__item quizzes__item--${loggedUser.quizzesProgress[quiz.id - 1].rarity}`}\r\n        onClick={() => props.onClick(quiz.id)}>{quiz.quizName}</button>)\r\n\r\n    return (\r\n\r\n        <div className=\"quizzes\">\r\n            {qMap}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Quizzes;","import React from 'react';\r\n\r\n\r\nconst Quiz = props => {\r\n\r\n    const { choosenQuiz, questionNum, didAnswer, sQuestion, selectedAnswer, userQuizData } = props;\r\n    const quizQuestionsLength = choosenQuiz.questions.length;\r\n\r\n    const answers = sQuestion.answers.map(answer =>\r\n        <button\r\n            key={answer.answerId}\r\n            className={didAnswer ? `quiz__answer ${sQuestion.correctAnswerIndex === answer.answerId ? 'quiz__answer--goodAns' : `${selectedAnswer === answer.answerId ? \"quiz__answer--badAns\" : \"\"}`}` : \"quiz__answer quiz__answer--active\"}\r\n            onClick={!didAnswer ? (e) => props.onClickAnswer(e, answer.answerId) : () => false}>\r\n            {`${answer.letter}) ${answer.text}`}\r\n        </button>\r\n    )\r\n\r\n    return (\r\n        <div className=\"quiz\">\r\n            <div className={`quiz__question quiz__question--${userQuizData.rarity}`} >\r\n                <div className={`quiz__quizName quiz__quizName--${userQuizData.rarity}`}>{choosenQuiz.quizName}</div>\r\n                <p className=\"quiz__text\">{sQuestion.question}</p>\r\n\r\n            </div>\r\n            {answers}\r\n            {didAnswer ? <button onClick={props.onClickNext} className=\"quiz__next\">{questionNum + 1 === quizQuestionsLength ? \"Podsumowanie\" : \"Dalej\"}</button> : <div></div>}\r\n\r\n            <div className=\"quiz__numOfQuestion\">{questionNum + 1}/{quizQuestionsLength > 9 ? 10 : quizQuestionsLength}</div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Quiz;","import React from 'react';\r\n\r\nconst Summary = props => {\r\n    const promExist = props.promotionExist();\r\n    return (\r\n        <React.Fragment>\r\n            <h2 className=\"summaryHeader\">Podsumowanie</h2>\r\n            <ul className=\"summaryList\">\r\n                <li className=\"summaryList__item\">\r\n                    Dobre odp: <span className=\"summaryList__item summaryList__item--bold\">{props.numOfGoodAnswer}/{props.quizQuestionsLength}</span>\r\n                </li>\r\n                <li className=\"summaryList__item\">\r\n                    Średnia: <span className=\"summaryList__item summaryList__item--bold\">{props.avarageGoodAnswer}/{props.quizQuestionsLength}</span>\r\n                </li>\r\n                <li className=\"summaryList__item\">\r\n                    Rarity: <span className=\"summaryList__item summaryList__item--bold\">{props.rarity}</span>\r\n                </li>\r\n            </ul >\r\n            {promExist ? <div className=\"summaryPromotion\">\r\n                !PROMOCJA TIERU!\r\n            </div> : <div></div>}\r\n            <button className=\"summaryButton\" onClick={props.onClick}>ZAKOŃCZ</button>\r\n        </React.Fragment >\r\n    );\r\n}\r\n\r\nexport default Summary;","import React, { Component } from 'react';\r\nimport Quizzes from './Quizzes.js';\r\nimport Quiz from './Quiz.js';\r\nimport Summary from './Summary.js'\r\n\r\n\r\n\r\nclass Main extends Component {\r\n    state = {\r\n        quizzes: [],\r\n        choosenQuiz: null,\r\n        questionNum: 0,\r\n        didAnswer: false,\r\n        sQuestions: [],\r\n        sQuestion: [],\r\n        selectedAnswer: null,\r\n        userQuizData: null,\r\n        numOfGoodAnswers: 0,\r\n        summaryExist: false,\r\n        avarageGoodAnswer: 0\r\n    }\r\n\r\n    shuffle = array => {\r\n        let i = array.length,\r\n            j = 0,\r\n            temp;\r\n\r\n        while (i--) {\r\n\r\n            j = Math.floor(Math.random() * (i + 1));\r\n\r\n            temp = array[i];\r\n            array[i] = array[j];\r\n            array[j] = temp;\r\n\r\n        }\r\n\r\n        return array;\r\n    }\r\n\r\n    handleChooseQuiz = (quizId) => {\r\n        const { quizzes } = this.state;\r\n        const { loggedUser } = this.props;\r\n\r\n        const quizSelected = quizzes.filter(quiz => quiz.id === quizId);\r\n        const userQuizData = loggedUser.quizzesProgress.find(quizProgress => quizProgress.quizId === quizId);\r\n\r\n        this.setState(prevState => ({\r\n            choosenQuiz: quizSelected[0],\r\n            userQuizData\r\n        }))\r\n\r\n        this.handleShuffleQuestion(quizSelected[0]);\r\n    }\r\n\r\n    handleShuffleQuestion = choosenQuiz => {\r\n        const shuffledQuestions = this.shuffle([...choosenQuiz.questions]);\r\n        this.setState(prevState => ({\r\n            sQuestions: [...shuffledQuestions]\r\n        }))\r\n        this.handleChooseQuestion(shuffledQuestions);\r\n    }\r\n\r\n    handleChooseQuestion = shuffledQuestions => {\r\n        this.setState(prevState => ({\r\n            sQuestion: prevState.sQuestions[this.state.questionNum]\r\n        }))\r\n    }\r\n\r\n    handleNextQuestion = () => {\r\n        if (this.state.questionNum < this.state.choosenQuiz.questions.length - 1) {\r\n            this.setState(prevState => ({\r\n                questionNum: prevState.questionNum + 1,\r\n                sQuestion: prevState.sQuestions[prevState.questionNum + 1],\r\n                didAnswer: !prevState.didAnswer\r\n            }))\r\n        } else if (this.state.summaryExist) {\r\n            this.setState(prevState => ({\r\n                choosenQuiz: null,\r\n                questionNum: 0,\r\n                didAnswer: false,\r\n                sQuestions: [],\r\n                sQuestion: [],\r\n                cAns: '',\r\n                numOfGoodAnswers: 0,\r\n                avarageGoodAnswer: 0,\r\n                summaryExist: !prevState.summaryExist\r\n            }))\r\n        }\r\n        else {\r\n            this.handleCountAvarageGoodAnswer([...this.state.userQuizData.lastSolvesGoodAns]);\r\n            this.setState(prevState => ({\r\n                summaryExist: !prevState.summaryExist\r\n            }))\r\n        }\r\n    }\r\n\r\n    handleCountAvarageGoodAnswer = lastSolves => {\r\n        let avarageGoodAnswer = lastSolves.reduce((x, y) => x + y);\r\n        avarageGoodAnswer = avarageGoodAnswer / 10;\r\n\r\n        this.setState(prevState => ({\r\n            avarageGoodAnswer\r\n        }))\r\n    }\r\n\r\n    handleChooseAnswer = (e, answerId) => {\r\n        const { sQuestion } = this.state;\r\n        if (sQuestion.correctAnswerIndex === answerId) {\r\n            this.setState(prevState => ({\r\n                numOfGoodAnswers: prevState.numOfGoodAnswers + 1\r\n            }))\r\n\r\n        }\r\n        this.setState(prevState => ({\r\n            didAnswer: !prevState.didAnswer,\r\n            selectedAnswer: answerId\r\n        }))\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"data/quizzes.json\")\r\n            .then(response => response.json())\r\n            .then(result => this.setState(prevState => ({\r\n                quizzes: [...result]\r\n            })))\r\n    }\r\n\r\n    rarityPromotion = () => {\r\n        const avarageGoodAnswer = this.state.avarageGoodAnswer;\r\n        const rarity = this.state.userQuizData.rarity;\r\n\r\n        if (avarageGoodAnswer <= 3 && rarity === \"gray\") {\r\n            return false;\r\n        } else if (avarageGoodAnswer <= 4 && rarity === \"gray\") {\r\n\r\n            return false;\r\n        } else if (avarageGoodAnswer <= 6 && rarity === \"blue\") {\r\n\r\n            return false;\r\n        } else if (avarageGoodAnswer <= 8 && rarity === \"purple\") {\r\n\r\n            return false;\r\n        } else if (avarageGoodAnswer <= 9 && rarity === \"red\") {\r\n            return false;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { quizzes, choosenQuiz, questionNum, didAnswer, sQuestion, selectedAnswer, userQuizData, numOfGoodAnswers, avarageGoodAnswer } = this.state;\r\n        const { loggedUser } = this.props;\r\n\r\n\r\n        return (\r\n\r\n            <main className=\"main\">\r\n                {!choosenQuiz\r\n                    ? <Quizzes quizzes={quizzes} onClick={this.handleChooseQuiz} loggedUser={loggedUser} />\r\n                    : this.state.summaryExist\r\n                        ? <Summary\r\n                            numOfGoodAnswer={numOfGoodAnswers}\r\n                            rarity={userQuizData.rarity}\r\n                            quizQuestionsLength={choosenQuiz.questions.length}\r\n                            onClick={this.handleNextQuestion}\r\n                            avarageGoodAnswer={avarageGoodAnswer}\r\n                            promotionExist={this.rarityPromotion}\r\n                        />\r\n                        : <Quiz\r\n                            didAnswer={didAnswer}\r\n                            questionNum={questionNum}\r\n                            onClickNext={this.handleNextQuestion}\r\n                            choosenQuiz={choosenQuiz}\r\n                            onClickAnswer={this.handleChooseAnswer}\r\n                            sQuestion={sQuestion}\r\n                            selectedAnswer={selectedAnswer}\r\n                            userQuizData={userQuizData}\r\n                        />\r\n                }\r\n            </main>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Main;","import React from 'react';\r\nconst StartScreen = props => {\r\n    return (\r\n        <div className=\"start\" id=\"start\">\r\n            <div className={`start__triangle start__triangle--left ${props.lTriangle}`}></div>\r\n            <button className={`start__circle ${props.circle}`} onClick={props.onClick} onAnimationEnd={props.onAnimationEnd}>\r\n                <h1 className=\"start__title\">Kweez</h1>\r\n            </button>\r\n            <div className={`start__triangle start__triangle--right ${props.rTriangle}`}></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StartScreen;","import React from 'react';\r\n\r\nconst LoginForm = props => {\r\n    const { inputLogin, inputPass } = props;\r\n    return (\r\n        <form className=\"loginForm\" onSubmit={e => props.onSubmit(e, inputLogin, inputPass)}>\r\n            <input type=\"text\" className=\"loginForm__input\" value={inputLogin} placeholder=\"Login\" onChange={props.onChange} name=\"login\" />\r\n            <input type=\"password\" className=\"loginForm__input\" value={inputPass} placeholder=\"Password\" onChange={props.onChange} name=\"pass\" />\r\n            <button className=\"loginForm__button\" type=\"submit\">LOG IN</button>\r\n            <button className=\"loginForm__button loginForm__button--register\" onClick={props.onRegisterClick}>REGISTER</button>\r\n            {props.loginError ? <div className=\"loginForm__error\">Nazwa użytkownika lub hasło nieprawidłowe</div> : false}\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default LoginForm;","import React from 'react';\r\n\r\nconst RegisterForm = props => {\r\n    const { inputLogin, inputPass, inputEmail } = props;\r\n    return (\r\n        <form className=\"loginForm\" onSubmit={props.onSubmit}>\r\n            <input type=\"text\" className=\"loginForm__input\" value={inputLogin} placeholder=\"Login\" onChange={props.onChange} name=\"login\" />\r\n            <input type=\"password\" className=\"loginForm__input\" value={inputPass} placeholder=\"Password\" onChange={props.onChange} name=\"pass\" />\r\n            <input type=\"text\" className=\"loginForm__input\" value={inputEmail} placeholder=\"E-mail\" onChange={props.onChange} name=\"email\" />\r\n            <button className=\"loginForm__button loginForm__button--register\" type=\"submit\">REGISTER</button>\r\n            <button className=\"loginForm__button loginForm__button--back\" onClick={props.onBackClick}>BACK</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default RegisterForm;","import React, { Component } from 'react';\r\nimport LoginForm from './LoginForm.js';\r\nimport RegisterForm from './RegisterForm.js';\r\nclass Login extends Component {\r\n    state = {\r\n        inputLogin: \"\",\r\n        inputPass: \"\",\r\n        inputEmail: \"\",\r\n        register: false,\r\n        rightTestLogin: \"dawid\",\r\n        rightTestPass: \"placki\"\r\n    }\r\n\r\n    handleChange = e => {\r\n        if (e.target.name === \"login\") {\r\n            this.setState({\r\n                inputLogin: e.target.value\r\n            })\r\n        } else if (e.target.name === \"pass\") {\r\n            this.setState({\r\n                inputPass: e.target.value\r\n            })\r\n        } else if (e.target.name === \"email\") {\r\n            this.setState({\r\n                inputEmail: e.target.value\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n\r\n    handleRegisterFormShow = () => {\r\n        this.setState({\r\n            register: !this.state.register,\r\n            inputLogin: \"\",\r\n            inputPass: \"\"\r\n        })\r\n\r\n        this.props.handleLoginError();\r\n    }\r\n\r\n    render() {\r\n        const { inputLogin, inputPass, inputEmail } = this.state;\r\n        return (\r\n            <main className=\"main\">\r\n                {!this.state.register ?\r\n                    <LoginForm\r\n                        inputLogin={inputLogin}\r\n                        inputPass={inputPass}\r\n                        onChange={this.handleChange}\r\n                        onRegisterClick={this.handleRegisterFormShow}\r\n                        onSubmit={this.props.onLoginSubmit}\r\n                        loginError={this.props.loginError}\r\n                    /> :\r\n                    <RegisterForm\r\n                        inputLogin={inputLogin}\r\n                        inputPass={inputPass}\r\n                        inputEmail={inputEmail}\r\n                        onChange={this.handleChange}\r\n                        onBackClick={this.handleRegisterFormShow}\r\n                        onSubmit={this.props.onRegisterSubmit}\r\n                    />\r\n                }\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\nimport MainNavigation from './MainNavigation.js';\nimport Main from './Main.js';\nimport StartScreen from './StartScreen.js';\nimport Login from './Login.js';\n\nclass App extends Component {\n\n  state = {\n    menuAnim: \"\",\n    leftTriangleAnim: \"\",\n    rightTriangleAnim: \"\",\n    circleAnim: \"\",\n    animEnd: false,\n    isLogged: false,\n    loginError: false,\n    users: null,\n    loggedUser: null\n  }\n\n\n  handleShowNavigation = () => {\n    const { menuAnim } = this.state;\n\n    if (menuAnim === \"menuAnimIn\") {\n      this.setState({\n        menuAnim: \"menuAnimOut\"\n      })\n    } else {\n      this.setState({\n        menuAnim: \"menuAnimIn\"\n      })\n    }\n  }\n\n  handleStart = () => {\n    this.setState(prevState => ({\n      leftTriangleAnim: \"animated slideOutUp\",\n      rightTriangleAnim: \"animated slideOutDown\",\n      circleAnim: \"animated bounceOut\"\n    }))\n  }\n\n  handleChangeOnAnim = () => {\n    this.setState(prevState => ({\n      animEnd: true\n    }))\n  }\n\n\n  handleLoginSubmit = (e, inputLogin, inputPass) => {\n    inputLogin = inputLogin.toLowerCase();\n    e.preventDefault();\n\n    const users = [...this.state.users];\n    const user = users.filter(user => user.username === inputLogin && user.password === inputPass);\n\n    if (user.length !== 1) {\n      this.setState(prevState => ({\n        loginError: true\n      }))\n    } else if (user[0].username === inputLogin && user[0].password === inputPass) {\n      this.setState(prevState => ({\n        isLogged: !prevState.isLogged,\n        loggedUser: user[0]\n      }))\n    }\n  }\n\n  handleRegisterSubmit = e => {\n    e.preventDefault();\n    this.setState({\n      loginError: false\n    })\n  }\n\n  handleLoginError = () => {\n    this.setState({\n      loginError: false\n    })\n  }\n\n  componentDidMount() {\n    fetch('data/users.json')\n      .then(response => response.json())\n      .then(result => this.setState({\n        users: result\n      }))\n  }\n\n\n  render() {\n    const { menuAnim, leftTriangleAnim, rightTriangleAnim, circleAnim, isLogged, loggedUser } = this.state;\n    return (\n      <>\n        {!this.state.animEnd ?\n          <StartScreen\n            lTriangle={leftTriangleAnim}\n            rTriangle={rightTriangleAnim}\n            circle={circleAnim}\n            onClick={this.handleStart}\n            onAnimationEnd={this.handleChangeOnAnim}\n          /> : false}\n        {/* <MainNavigation\n          onClick={this.handleShowNavigation}\n          menuAnim={menuAnim}\n        /> */}\n        {isLogged ? <Main loggedUser={loggedUser} /> : <Login\n          onLoginSubmit={this.handleLoginSubmit}\n          loginError={this.state.loginError}\n          onRegisterSubmit={this.handleRegisterSubmit}\n          handleLoginError={this.handleLoginError} />}\n\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'animate.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}